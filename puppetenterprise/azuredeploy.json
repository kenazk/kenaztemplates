{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "newStorageAccountName":{
         "type":"string",
         "metadata":{
            "description":"Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
         }
      },
      "adminUsername":{
         "type":"string",
         "metadata":{
            "description":"User name for the Virtual Machine."
         }
      },
      "adminPassword":{
         "type":"securestring",
         "metadata":{
            "description":"Password for the Virtual Machine."
         }
      },
      "dnsNameForPublicIP":{
         "type":"string",
         "metadata":{
            "description":"Unique DNS Name for the Public IP used to access the Virtual Machine."
         }
      },
      "puppetAgentCount":{
         "type":"int",
         "metadata":{
            "description":"Number of Puppet Agents to deploy."
         },
         "defaultValue":1
      },
      "vmSize" : {
        "type" : "string",
        "metadata" : "Size of VM",
        "defaultValue" : "Standard_D1"
      }
   },
   "variables":{
      "imagePublisher":"PuppetLabs",
      "imageOffer":"PuppetEnterprise",
      "imageSku":"3.2",
      "OSDiskName":"osdisk1",
      "nicName":"puppetmasterNic",
      "addressPrefix":"10.0.0.0/16",
      "subnetName":"Subnet",
      "subnetPrefix":"10.0.0.0/24",
      "storageAccountType":"Standard_LRS",
      "publicIPAddressName":"myPublicIP",
      "publicIPAddressType":"Dynamic",
      "vmStorageAccountContainerName":"vhds",
      "puppetMasterVmName":"puppetmaster",
      "vmName":"peagent",
      "virtualNetworkName":"MyVNET",
      "vnetID":"[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
      "subnetRef":"[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
      "publicIpId":"[resourceId(resourceGroup().Name,concat('Microsoft.Network','/','publicIPAddresses'),variables('publicIPAddressName'))]"
   },
   "resources":[
      {
         "type":"Microsoft.Storage/storageAccounts",
         "name":"[parameters('newStorageAccountName')]",
         "apiVersion":"2015-05-01-preview",
         "location":"[resourceGroup().location]",
         "properties":{
            "accountType":"[variables('storageAccountType')]"
         }
      },
      {
         "apiVersion":"2015-05-01-preview",
         "type":"Microsoft.Network/publicIPAddresses",
         "name":"[variables('publicIPAddressName')]",
         "location":"[resourceGroup().location]",
         "properties":{
            "publicIPAllocationMethod":"[variables('publicIPAddressType')]",
            "dnsSettings":{
               "domainNameLabel":"[parameters('dnsNameForPublicIP')]"
            }
         }
      },
      {
         "apiVersion":"2015-05-01-preview",
         "type":"Microsoft.Network/publicIPAddresses",
         "name":"[concat('peagentip', copyIndex())]",
         "location":"[resourceGroup().location]",
         "copy":{
            "name":"puppetAgentPipLoop",
            "count":"[parameters('puppetAgentCount')]"
         },
         "properties":{
            "publicIPAllocationMethod":"dynamic",
            "dnsSettings":{
               "domainNameLabel":"[concat(parameters('dnsNameForPublicIP'), copyIndex())]"
            }
         }
      },
      {
         "apiVersion":"2015-05-01-preview",
         "type":"Microsoft.Network/virtualNetworks",
         "name":"[variables('virtualNetworkName')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Network/networkSecurityGroups/', 'puppetNetworkSecurityGroup')]"
         ],
         "properties":{
            "addressSpace":{
               "addressPrefixes":[
                  "[variables('addressPrefix')]"
               ]
            },
            "subnets":[
               {
                  "name":"[variables('subnetName')]",
                  "properties":{
                     "addressPrefix":"[variables('subnetPrefix')]",
                     "networkSecurityGroup":{
                        "id":"[resourceId('Microsoft.Network/networkSecurityGroups', 'puppetNetworkSecurityGroup')]"
                     }
                  }
               }
            ]
         }
      },
      {
         "apiVersion":"2015-05-01-preview",
         "type":"Microsoft.Network/networkSecurityGroups",
         "name":"puppetNetworkSecurityGroup",
         "location":"[resourceGroup().location]",
         "properties":{
            "securityRules":[
               {
                  "name":"puppet",
                  "properties":{
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"8140",
                     "sourceAddressPrefix":"10.0.0.0/24",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":100,
                     "direction":"Inbound"
                  }
               },
               {
                  "name":"rdp",
                  "properties":{
                     "description":"Allow RDP",
                     "protocol":"tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"3389",
                     "sourceAddressPrefix":"Internet",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":101,
                     "direction":"Inbound"
                  }
               },
               {
                  "name":"ssh",
                  "properties":{
                     "description":"Allow RDP",
                     "protocol":"tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"22",
                     "sourceAddressPrefix":"Internet",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":201,
                     "direction":"Inbound"
                  }
               },
               {
                  "name":"MCollective",
                  "properties":{
                     "description":"MCollective",
                     "protocol":"tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"61613",
                     "sourceAddressPrefix":"Internet",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":102,
                     "direction":"Inbound"
                  }
               },
               {
                  "name":"https",
                  "properties":{
                     "description":"MCollective",
                     "protocol":"tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"443",
                     "sourceAddressPrefix":"Internet",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":103,
                     "direction":"Inbound"
                  }
               }
            ]
         }
      },
      {
         "apiVersion":"2015-05-01-preview",
         "type":"Microsoft.Network/networkInterfaces",
         "name":"[variables('nicName')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
         ],
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Dynamic",
                     "publicIPAddress":{
                        "id":"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                     },
                     "subnet":{
                        "id":"[variables('subnetRef')]"
                     }
                  }
               }
            ]
         }
      },
      {
         "apiVersion":"2015-05-01-preview",
         "type":"Microsoft.Network/networkInterfaces",
         "name":"[concat('peAgentNic',copyIndex())]",
         "location":"[resourceGroup().location]",
         "copy":{
            "name":"puppetAgentNicLoop",
            "count":"[parameters('puppetAgentCount')]"
         },
         "dependsOn":[
            "[concat('Microsoft.Network/publicIPAddresses/','peagentip',copyIndex())]",
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
         ],
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Dynamic",
                     "publicIPAddress":{
                        "id":"[resourceId('Microsoft.Network/publicIPAddresses',concat('peagentip',copyIndex()))]"
                     },
                     "subnet":{
                        "id":"[variables('subnetRef')]"
                     }
                  }
               }
            ]
         }
      },
      {
         "apiVersion":"2015-06-15",
         "type":"Microsoft.Compute/virtualMachines",
         "name":"[variables('puppetMasterVmName')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
         ],
         "properties":{
            "hardwareProfile":{
               "vmSize":"[parameters('vmSize')]"
            },
            "osProfile":{
               "computername":"[variables('puppetMasterVmName')]",
               "adminUsername":"[parameters('adminUsername')]",
               "adminPassword":"[parameters('adminPassword')]"
            },
            "storageProfile":{
               "imageReference":{
                  "publisher":"[variables('imagePublisher')]",
                  "offer":"[variables('imageOffer')]",
                  "sku":"[variables('imageSku')]",
                  "version":"latest"
               },
               "osDisk":{
                  "name":"osdisk",
                  "vhd":{
                     "uri":"[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
                  },
                  "caching":"ReadWrite",
                  "createOption":"FromImage"
               }
            },
            "networkProfile":{
               "networkInterfaces":[
                  {
                     "id":"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                  }
               ]
            },
            "diagnosticsProfile":{
               "bootDiagnostics":{
                  "enabled":"true",
                  "storageUri":"[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net')]"
               }
            }
         }
      },
      {
         "apiVersion":"2015-06-15",
         "type":"Microsoft.Compute/virtualMachines",
         "name":"[concat('peagentvm',copyIndex())]",
         "location":"[resourceGroup().location]",
         "copy":{
            "name":"puppetAgentVmLoop",
            "count":"[parameters('puppetAgentCount')]"
         },
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
            "[concat('Microsoft.Network/networkInterfaces/', 'peAgentNic', copyIndex())]"
         ],
         "properties":{
            "hardwareProfile":{
               "vmSize":"[parameters('vmSize')]"
            },
            "osProfile":{
               "computername":"[concat(variables('vmName'),copyIndex())]",
               "adminUsername":"[parameters('adminUsername')]",
               "adminPassword":"[parameters('adminPassword')]"
            },
            "storageProfile":{
               "imageReference":{
                  "publisher":"MicrosoftWindowsServer",
                  "offer":"WindowsServer",
                  "sku":"2012-R2-Datacenter",
                  "version":"latest"
               },
               "osDisk":{
                  "name":"osdisk",
                  "vhd":{
                     "uri":"[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','osdisk.vhd')]"
                  },
                  "caching":"ReadWrite",
                  "createOption":"FromImage"
               }
            },
            "networkProfile":{
               "networkInterfaces":[
                  {
                     "id":"[resourceId('Microsoft.Network/networkInterfaces',concat('peAgentNic',copyIndex()))]"
                  }
               ]
            },
            "diagnosticsProfile":{
               "bootDiagnostics":{
                  "enabled":"true",
                  "storageUri":"[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net')]"
               }
            }
         }
      },
      {
         "type":"Microsoft.Compute/virtualMachines/extensions",
         "name":"[concat('peagentvm',copyIndex(),'/puppetExtension')]",
         "apiVersion":"2015-05-01-preview",
         "location":"[resourceGroup().location]",
         "copy":{
            "name":"puppetAgentExtLoop",
            "count":"[parameters('puppetAgentCount')]"
         },
         "dependsOn":[
            "[concat('Microsoft.Compute/virtualMachines/', 'peagentvm',copyIndex())]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('puppetMasterVmName'))]"
         ],
         "properties":{
            "publisher":"PuppetLabs",
            "type":"PuppetEnterpriseAgent",
            "typeHandlerVersion":"3.2",
            "settings":{
               "PUPPET_MASTER_SERVER":"[variables('puppetMasterVmName')]",
               "PUPPET_AGENT_CERTNAME":"[concat('peagentvm,copyIndex()')]"
            }
         }
      }
   ]
}
